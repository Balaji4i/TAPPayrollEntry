package model.am;


import java.math.BigDecimal;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import model.am.common.Oando_AM;

import model.vo.Reimbursement_VOImpl;

import model.vo.XxsshrTapEmpFormVOImpl;

import oracle.adf.share.ADFContext;

import oracle.jbo.ApplicationModule;
import oracle.jbo.ViewCriteria;
import oracle.jbo.ViewCriteriaRow;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewObjectImpl;
//import model.am.common.Oando_AM;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Aug 22 17:52:17 IST 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class Oando_AMImpl extends ApplicationModuleImpl implements ApplicationModule, Oando_AM {
    /**
     * This is the default constructor (do not remove).
     */
    public Oando_AMImpl() {
    }


    /**
     * Container's getter for Lookup_View_ROVO.
     * @return Lookup_View_ROVO
     */
    public String createUop(BigDecimal hdrId) {
      //  String p_errorMessgae = null;
                String p_errorCode =null;
        try {
            String stmt1 = "begin xxfa_uop_depr_pkg.create_line(:p_uop_depr_hdr_id,:p_return_code,:p_return_msg); end;";
            CallableStatement cst = null;
            cst = this.getDBTransaction().createCallableStatement(stmt1, 0);
            cst.setObject("p_uop_depr_hdr_id", hdrId);
            cst.registerOutParameter("p_return_code", Types.VARCHAR);
            cst.registerOutParameter("p_return_msg", Types.VARCHAR);
            cst.executeUpdate();
            if (cst.getObject("p_return_code")  != null) {
               // p_errorMessgae = cst.getObject("p_return_msg").toString();
                                p_errorCode = cst.getObject("p_return_code").toString();
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return p_errorCode;
              
    }

    
    
//    
//    public String createUop(BigDecimal uop_depr_hdr_id) throws CommonJBOException,
//    SQLException{
//
//            java.math.BigDecimal p_uop_depr_hdr_id = new java.math.BigDecimal();
//
//            try {
//                p_uop_depr_hdr_id = new java.math.BigDecimal(uop_depr_hdr_id);
//            } catch (CommonJBOException e) {
//                throw new CommonJBOException(e.getMessage());
//            }
//            String stmt1 = "begin \n" + "xxfa_uop_depr_pkg(:p_uop_depr_hdr_id);\n" + "end;";
//            CallableStatement cst = null;
//            try {
//                cst = this.getDBTransaction().createCallableStatement(stmt1, 0);
//                cst.setObject("p_uop_depr_hdr_id", p_uop_depr_hdr_id);
//            cst.registerOutParameter("p_return_code", Types.VARCHAR);
//            cst.registerOutParameter("p_return_msg", Types.VARCHAR);
//            cst.executeUpdate();
//            return cst.getString("p_return_code"+" "+"p_return_msg");
//            } catch (CommonJBOException e) {
//
//
//            throw new CommonJBOException(e.getMessage());
//
//            }
//            finally {
//                        if (cst != null) {
//                            try {
//                                cst.close();
//
//                            } catch (CommonJBOException e) {
//                                // _log.severe("exception occured in invokereceiptstatus method"+e.getmessage());
//                                // throw new commonjboexception(e.getmessage());
//
//                                return e.toString();
//                            }
//                        }
//                    }
//        }
//


   

   
    public BigDecimal getPersonId(String userName) {

        BigDecimal personId = new BigDecimal(0);
        ViewObjectImpl vo = this.getUsers_ROVO();
        ViewCriteria vc = vo.createViewCriteria();
        ViewCriteriaRow vcRow = vc.createViewCriteriaRow();
        vcRow.setAttribute("Username", userName);
        vc.addRow(vcRow);
        vo.applyViewCriteria(vc);
        vo.executeQuery();
        if (vo.getEstimatedRowCount() > 0) {
            personId = (BigDecimal) vo.first().getAttribute("PersonId");
            ADFContext.getCurrent()
                      .getSessionScope()
                      .put("personId", personId);
        }

        return personId;
    }

    public void filterUser() {
        String userName= ADFContext.getCurrent()
                                    .getSessionScope()
                                    .get("userName")
                                    .toString();
        System.err.println(userName + "--------------User Name");
//        ViewObjectImpl vo = getDutyAllowance_VO();
//        vo.setNamedWhereClauseParam("b_username", userName);
//        vo.executeQuery();
//        System.err.println(vo.getEstimatedRowCount() + "-------Row Count");
    }

    /**
     * Container's getter for Users_ROVO1.
     * @return Users_ROVO1
     */
    public ViewObjectImpl getUsers_ROVO() {
        return (ViewObjectImpl) findViewObject("Users_ROVO");
    }
   

    /**
     * Container's getter for Reimbursement_ROVO1.
     * @return Reimbursement_ROVO1
     */
    public ViewObjectImpl getReimbursement_ROVO() {
        return (ViewObjectImpl) findViewObject("Reimbursement_ROVO");
    }

    /**
     * Container's getter for Reimbursement_VO1.
     * @return Reimbursement_VO1
     */
    public Reimbursement_VOImpl getReimbursement_VO() {
        return (Reimbursement_VOImpl) findViewObject("Reimbursement_VO");
    }

    /**
     * Container's getter for TapEmpForm_ROVO1.
     * @return TapEmpForm_ROVO1
     */
    public ViewObjectImpl getTapEmpForm_ROVO() {
        return (ViewObjectImpl) findViewObject("TapEmpForm_ROVO");
    }

    /**
     * Container's getter for XxsshrTapEmpFormVO1.
     * @return XxsshrTapEmpFormVO1
     */
    public XxsshrTapEmpFormVOImpl getXxsshrTapEmpFormVO() {
        return (XxsshrTapEmpFormVOImpl) findViewObject("XxsshrTapEmpFormVO");
    }
}
